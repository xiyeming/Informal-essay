<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd">

	<!-- 配置bean -->
	<bean id="helloWorld" class="com.sendiyang.beans.HelloWorld">
		<property name="name"  value="spring"></property>
	</bean>
	
	<!-- 通过构造方法注入 -->
	<bean id="car" class="com.sendiyang.beans.Car">
		<constructor-arg value="Audi" 		index="0" 	type="java.lang.String"></constructor-arg>
		<constructor-arg index="1" 	type="java.lang.String">
			<value><![CDATA[<ShangHai]]></value>
		</constructor-arg>
		<constructor-arg value="300000" 	index="2"	type="double"></constructor-arg>
	</bean>
	
	<bean id="car2" class="com.sendiyang.beans.Car">
		<constructor-arg value="Baoma" 		index="0"	type="java.lang.String"></constructor-arg>
		<constructor-arg value="ShangHai" 	index="1"	type="java.lang.String"></constructor-arg>
		<constructor-arg index="2"	type="int">
			<value>240</value>
		</constructor-arg>
	</bean>
	
	
	<bean id="person" class="com.sendiyang.beans.Person">
		<property name="name" value="Tom"></property>
		<property name="age" value="24"></property>
		<!-- 可以使用 property 中的 ref 属性建立 bean 之间的引用关系 -->
		<!-- <property name="car" ref="car"></property> -->
		
		<!-- <property name="car">
			<ref bean="car"/>
		</property> -->
		 
		<!-- 内部bean -->
		<property name="car">
			<bean class="com.sendiyang.beans.Car">
				<constructor-arg value="ford"></constructor-arg>
				<constructor-arg value="Changan"></constructor-arg>
				<constructor-arg value="200000" type="double"></constructor-arg>
			</bean>
		</property>
	</bean>
	
	<bean id="person2" class="com.sendiyang.beans.Person">
		<constructor-arg value="Jerry"></constructor-arg>
		<constructor-arg value="25"></constructor-arg>
		<!-- <constructor-arg ref="car"></constructor-arg> -->
		
		<!-- 测试赋值 null -->
		<!-- <constructor-arg><null/></constructor-arg> -->
		
		<constructor-arg ref="car"></constructor-arg>
		<property name="car.maxSpeed" value="300000"></property>
	</bean>
	
	<!-- set方法注入 -->
	<!-- <bean id="helloWorld" class="com.sendiyang.beans.HelloWorld">
		<property name="name"  value="spring"></property>
	</bean> -->
	
	<!-- 测试如何配置集合属性 -->
	<bean id="person3" class="com.sendiyang.beans.collection.Person">
		<property name="name" 	value="Mike"></property>
		<property name="age" 	value="27"></property>
		<property name="cars">
			<!-- 使用 List 节点为 list 赋值 -->
			<list>
				<ref bean="car"/>
				<ref bean="car2"/>
				<bean class="com.sendiyang.beans.Car">
					<constructor-arg value="Ford"></constructor-arg>
					<constructor-arg value="Changan"></constructor-arg>
					<constructor-arg value="200000" type="double"></constructor-arg>
				</bean>
			</list>
		</property>
	</bean>
	
	<!-- 配置 map 属性值 -->
	<bean id="newPerson" class="com.sendiyang.beans.collection.NewPerson" >
		<property name="name" value="Rose"></property>
		<property name="age" value="28"></property>
		<property name="cars">
			<!-- 使用 map 节点及 map 的 entry 子节点配置 map 类型的成员变量 -->
			<map>
				<entry key="AA" value-ref="car"></entry>
				<entry key="BB" value-ref="car2"></entry>
			</map>
		</property>
	</bean>
	
	<!-- 配置 Properties 属性值 -->
	<bean id="dataSource" class="com.sendiyang.beans.collection.DataSource">
		<property name="properties">
			<!-- 使用 props 和 prop 子节点来为  Properties 赋值 -->
			<props>
				<prop key="user">root</prop>
				<prop key="password">1234</prop>
				<prop key="jdbcUrl">jdbc:mysql://test</prop>
				<prop key="driverClass">com.mysql.jdbc.Driver</prop>
			</props>
		</property>
	</bean>
	
	<!-- 配置单列的集合 bean， 以供多个 bean 进行引用     -->
	<!-- 需要引用新的命名空间   util -->
	<util:list id="cars">
		<ref bean="car"/>
		<ref bean="car2"/>
	</util:list>
	
	<bean id="person4" class="com.sendiyang.beans.collection.Person">
		<property name="name" value="Jake"></property>
		<property name="age" value="29"></property>
		<property name="cars" ref="cars"></property>
	</bean>
	
	<!-- 通过  p 命名空间为 bean 的属性赋值 , 相对于传统的方式要简洁一些  -->
	<!-- 导入 p 命名空间  -->
	<bean id="person5" class="com.sendiyang.beans.collection.Person" p:age="30" 
		p:name="Queen" p:cars-ref="cars"></bean>
	
</beans>

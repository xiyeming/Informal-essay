<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- 
		抽象 bean： bean 的 abstract 属性 为  true 的 bean ，这样的 bean 不能被 IOC 容器实例，只能用来被继承配置 
		若某一个 bean 的 class 属性没有被指定， 则该 bean 必须是一个抽象 bean
	-->
	<bean id="address"
		p:city="BeiJing……" p:street="WuDaoKou" abstract="true"></bean>
		
	<!-- bean 配置的继承： 使用 bean 的 parent 属性指定继承 bean 的那个配置 -->
	<bean id="address2" class="com.sendiyang.beans.autowire.Address" 
		parent="address"></bean>
		
	<bean id="address3" class="com.sendiyang.beans.autowire.Address" 
		parent="address" p:street="DaZhongSi" ></bean>
		
	<bean id="car" class="com.sendiyang.beans.autowire.Car"
		p:brand="Audi" p:price="300000"></bean>
		
	<!-- 要求再配置 Person 时， 必须有一个关联的car! 换句话说，person 这个bean 依赖与 Car 这个 bean -->
	<bean id="person" class="com.sendiyang.beans.autowire.Person"
		p:name="Tom" p:address-ref="address3" depends-on="car"></bean>
</beans>
